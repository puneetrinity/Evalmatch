version: '3.8'

services:
  # Development server with hot reload
  dev:
    image: node:20-slim
    working_dir: /app
    command: npm run dev
    ports:
      - "3000:3000"
    environment:
      # Development mode
      NODE_ENV: development
      
      # Firebase Client Configuration
      VITE_FIREBASE_API_KEY: ${VITE_FIREBASE_API_KEY}
      VITE_FIREBASE_AUTH_DOMAIN: ${VITE_FIREBASE_AUTH_DOMAIN}
      VITE_FIREBASE_PROJECT_ID: ${VITE_FIREBASE_PROJECT_ID}
      VITE_FIREBASE_STORAGE_BUCKET: ${VITE_FIREBASE_STORAGE_BUCKET}
      VITE_FIREBASE_MESSAGING_SENDER_ID: ${VITE_FIREBASE_MESSAGING_SENDER_ID}
      VITE_FIREBASE_APP_ID: ${VITE_FIREBASE_APP_ID}
      
      # Firebase Admin
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_SERVICE_ACCOUNT_KEY: ${FIREBASE_SERVICE_ACCOUNT_KEY}
      
      # AI Services
      GROQ_API_KEY: ${GROQ_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
      
      # Database (optional)
      DATABASE_URL: ${DATABASE_URL:-}
      
      # Session
      SESSION_SECRET: ${SESSION_SECRET:-dev-secret}
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    networks:
      - evalmatch-network

  # Optional: PostgreSQL for development
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: evalmatch
      POSTGRES_PASSWORD: localpassword
      POSTGRES_DB: evalmatch
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - evalmatch-network

networks:
  evalmatch-network:
    driver: bridge

volumes:
  postgres_data: